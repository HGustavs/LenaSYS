
accessedservice.php

-------------------

********
* pre-req
********

(checklogin() is TRUE && (hasAccess($userid, $cid, 'w') || isSuperUser($userid,) is TRUE))

--------------------

Test 1: try to update a created user by changing the username
To make sure the update of a user works and what response it will get form the database.
It can be done by creating a user with SQL-query.
   SQL-query: insert into user( username, email, firstname, lastname, ssn, password, addedtime, class) 
       VALUES ( :username, :email, :firstname, :lastname, :ssn, :password, now(), :class)
Then make an update by useing SQL-query.
   SQL-query: UPDATE user SET username=:username WHERE uid=:uid
To update the username of the user. The values to be checked are username and uid.
If the update was unable to succeed, it should display an error message which says 
that the user does not exist in the database.

---------------------

Test 2: try to add two users with same ssn or username
By adding two users with same ssn or username to see how the database will react.
This can be done with the SQL-query to insert a user.
   SQL-query: INSERT INTO user( username, email, firstname, lastname, ssn, password, addedtime, class) 
       VALUES ( :username, :email, :firstname, :lastname, :ssn, :password, now(), :class)
Both the username and ssn values should be checked, to avoid duplcation. If there are two or more
users with the same ssn or username, it should display an error message. Which the database will indicates 
there is a duplicate ssn or username.

---------------------- 

Test 3: try to update a created user_course by changing the access
To make sure the updating the user_course works and how the database will respond. 
It can be done with SQL-query to create a user_course: 
   SQL-query: INSERT INTO user_course (uid, cid, access, vers, vershistory) 
      VALUES (:uid, :cid, ‘R’, :vers, ‘ ’) ON DUPLICATE KEY UPDATE vers=:avers, vershistory=CONCAT(vershistory, CONCAT(:bvers, ‘, ‘))
It should display an error message if the insert of a user to the user_course into the database was unable.
After the user_course was created, then make an update of the user_course by using SQL-query: 
  SQL-query: UPDATE user_course SET access=:access WHERE uid=:uid AND cid=:cid
By updating the access of the user_course. The values of access, uid and cid should be checked. 