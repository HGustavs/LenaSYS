
courseedservice.php

---------------------------------------------------------------------------------------------------------------------
- Insert into course (line 79)
---------------------------------------------------------------------------------------------------------------------

*********
* pre-req:
********* 

{(checklogin) && ($ha)} IS TRUE

*********
* send parameters inputs to courseedservice.php 
*********
send
{
    $opt = "NEW";
    $userid = 1;
    $coursecode = "G1338";
    $coursename = "Testing-Course";
    $courseGitURL = "TestGitURL";
}

*********
* Gather service output:
*********
Save the values of the echoed array as a JSON (at the end of the file. echo json_encode($array);)
this is the expected output for the micro service.

*********
* Remove inserted row in db
*********

SQL-query: DELETE FROM course WHERE coursecode = "G1338";

---------------------------------------------------------------------------------------------------------------------
- Insert into vers (line 116)
---------------------------------------------------------------------------------------------------------------------

*********
* pre-req:
********* 

{(checklogin) && ($ha)} IS TRUE

Pre-querys:
$preValuesCourse =
{	
    9999,
	1
};

INSERT INTO course(cid, creator) VALUES ($preValuesCourse[0], $preValuesCourse[1]);
//add a course so we know it exists in the database before adding the vers

*********
* send parameters inputs to courseedservice.php
*********
send
{
    $opt = "NEWVRS";
    $cid = 9999;
    $coursecode = "G1338";
    $versid = 1338;
    $versname = "HT15";
    $coursename = "Testing-course";
    $coursenamealt = "Course for testing codeviewer";
    $motd = "Code examples shows both templateid and boxid!";
    $startdate = "2020-05-01 00:00:00";
    $enddate = "2020-06-30 00:00:00";
}

*********
* Gather service output:
*********
Save the values of the echoed array as a JSON (at the end of the file. echo json_encode($array);)
this is the expected output for the micro service.

*********
* Remove inserted row in db
*********

SQL-query: 	DELETE FROM vers WHERE cid = 9999;
		    DELETE FROM course WHERE cid = 9999;


---------------------------------------------------------------------------------------------------------------------
- Update course (line 138)
---------------------------------------------------------------------------------------------------------------------

*********
* pre-req:
********* 

{(checklogin) && ($ha)} IS TRUE
&& $makeactive = "3"

Pre-query:

$preValuesCourse =
{	
    9999,
	1
};

INSERT INTO course(cid, creator) VALUES ($preValuesCourse[0], $preValuesCourse[1]);
//add a course so we know it exists in the database before updating its vers.

*********
* send parameters inputs to courseedservice.php 
*********
send
{
    $cid = 9999;
    $versid = 1337;
}

*********
* Gather service output:
*********
Save the values of the echoed array as a JSON (at the end of the file. echo json_encode($array);)
this is the expected output for the micro service.

*********
* Remove inserted row in db
*********

SQL-query: 	DELETE FROM course WHERE cid = 9999;

---------------------------------------------------------------------------------------------------------------------
- Update vers (line 152)
---------------------------------------------------------------------------------------------------------------------

*********
* pre-req:
********* 

{(checklogin) && ($ha)} IS TRUE

Pre-querys:
$preValuesCourse =
{	
    9999,
	1
};

INSERT INTO course(cid, creator) VALUES ($preValuesCourse[0], $preValuesCourse[1]);
//make sure there is an active course with set cid.

$preValuesVers =
{	
    9999,
	12345678,
    "testVersName",
    "testCourseCode",
    "testCourseName",
    "testCourseNameAlt"
};

INSERT INTO vers(cid, vers, versname, coursecode, coursename, coursenamealt, startdate, enddate, motd) VALUES ($preValuesVers[0], $preValuesVers[1], $preValuesVers[2], $preValuesVers[3], $preValuesVers[4], $preValuesVers[5]);
//make sure we have a vers that we can test the update on.

*********
* send parameters inputs to courseedservice.php 
*********
send
{
    $opt = "UPDATEVRS";
    $courseid = 9999;
    $coursecode = "testCourseCode";
    $versid = 12345678;
    $versname = “updateTest”;
}

*********
* Gather service output:
*********
Save the values of the echoed array as a JSON (at the end of the file. echo json_encode($array);)
this is the expected output for the micro service.

*********
* Remove inserted row in db
*********

SQL-query: 	DELETE FROM vers WHERE cid = 9999;
		    DELETE FROM course WHERE cid = 9999;

---------------------------------------------------------------------------------------------------------------------
- Update course (line 173)
---------------------------------------------------------------------------------------------------------------------

*********
* pre-req:
********* 

{(checklogin) && ($ha)} IS TRUE

Pre-querys:
$preValuesCourse =
{	
    9999,
	1
};

INSERT INTO course(cid, creator) VALUES ($preValuesCourse[0], $preValuesCourse[1]);
//make sure there is an active course with set cid.

*********
* send parameters inputs to courseedservice.php 
*********
send
{
    $opt = "CHGVERS";
    $courseid = 9999;
    $versid = “1337”;
}

*********
* Gather service output:
*********
Save the values of the echoed array as a JSON (at the end of the file. echo json_encode($array);)
this is the expected output for the micro service.

*********
* Remove inserted row in db
*********

SQL-query:	DELETE FROM course WHERE cid = 9999;

---------------------------------------------------------------------------------------------------------------------
- Insert into vers (line 181)
---------------------------------------------------------------------------------------------------------------------

NOTE: Unclear about this test since it wants to copy a course, however inserting the same row twice makes it an error hence, the “send” has a different value for versid.

*********
* pre-req:
********* 

{(checklogin) && ($ha)} IS TRUE
$allOperationsSucceeded = true;


Pre-querys:
$preValuesCourse =
{	
    9999,
	1
};

INSERT INTO course(cid, creator) VALUES ($preValuesCourse[0], $preValuesCourse[1]);
//make sure there is an active course with set cid.

$preValuesVers =
{	
    9999,
	12345678,
    “testVersName”,
    “testCourseCode”,
    “testCourseName”,
    “testCourseNameAlt”
    "2020-05-01 00:00:00",
    "2020-06-30 00:00:00",
    “testMotd”
};

INSERT INTO vers(cid, vers, versname, coursecode, coursename, coursenamealt, startdate, enddate, motd) VALUES ($preValuesVers[0], $preValuesVers[1], $preValuesVers[2], $preValuesVers[3], $preValuesVers[4], $preValuesVers[5], $preValuesVers[6], $preValuesVers[7], $preValuesVers[8]);
//make sure we have a vers.

*********
* send parameters inputs to courseedservice.php 
*********
send
{
    $opt = "CPYVRS";
    $cid = 9999;
    $coursecode = "testCourseCode";
    $versid = 12345679;
    $versname = “testVersName”
    $coursename = "testCourseName";
    $coursenamealt = "testCourseNameAlt";
    $motd = "testMotd";
    $startdate = "2020-05-01 00:00:00";
    $enddate = "2020-06-30 00:00:00";
}

*********
* Gather service output:
*********
Save the values of the echoed array as a JSON (at the end of the file. echo json_encode($array);)
this is the expected output for the micro service.

*********
* Remove inserted row in db
*********

SQL-query: 	DELETE FROM vers WHERE cid = 9999;
		    DELETE FROM course WHERE cid = 9999;

---------------------------------------------------------------------------------------------------------------------
- Update course (line 433)
---------------------------------------------------------------------------------------------------------------------

*********
* pre-req:
********* 

{(checklogin) && ($ha)} IS TRUE
&& $makeactive = "3"

Pre-querys:
$preValuesCourse =
{	
    9999,
	1
};

INSERT INTO course(cid, creator) VALUES ($preValuesCourse[0], $preValuesCourse[1]);
//make sure there is an active course with set cid.

*********
* send parameters inputs to courseedservice.php 
*********
send
{
    $cid = 9999;
    $versid = 1337;
}


*********
* Gather service output:
*********
Save the values of the echoed array as a JSON (at the end of the file. echo json_encode($array);)
this is the expected output for the micro service.

*********
* Remove inserted row in db
*********

SQL-query:	DELETE FROM course WHERE cid = 9999;

---------------------------------------------------------------------------------------------------------------------
- Update course (line 456)
---------------------------------------------------------------------------------------------------------------------

*********
* pre-req:
********* 

{(checklogin) && ($ha)} IS TRUE

Pre-query:
$preValuesCourse =
{	
    9999,
	1
};

INSERT INTO course(cid, creator) VALUES ($preValuesCourse[0], $preValuesCourse[1]);
//make sure there is an active course with set cid.

*********
* send parameters inputs to courseedservice.php 
*********
send
{
    $opt = "UPDATE";
    $cid = 9999;
    $coursename = "Testing-Course";
    $visibility = 1;
    $coursecode = "G9999";
    $courseGitURL = NULL;
}

*********
* Gather service output:
*********
Save the values of the echoed array as a JSON (at the end of the file. echo json_encode($array);)
this is the expected output for the micro service.

*********
* Remove inserted row in db
*********

SQL-query:	DELETE FROM course WHERE cid = 9999;

---------------------------------------------------------------------------------------------------------------------
- Insert settings (line 488)
---------------------------------------------------------------------------------------------------------------------

*********
* pre-req:
********* 

{(checklogin) && ($ha)} IS TRUE

*********
* send parameters inputs to courseedservice.php 
*********
send
{
    $opt = "SETTINGS";
    $motd = “Test”;
    $readonly = 0;
}

*********
* Gather service output:
*********
Save the values of the echoed array as a JSON (at the end of the file. echo json_encode($array);)
this is the expected output for the micro service.

*********
* Remove inserted row in db
*********

SQL-query:	DELETE FROM settings ORDER BY sid DESC LIMIT 1;