profileservice-tests.txt


Before tests start, create 2 dummy accounts, one as teacher, another as student. Examples for names, 
name = TestSTUD, PASSW = testpasswS
name = TestTEACH, PASSW = testpasswT



--------------------------------------------
Row : 46 Check if it blocks teacher
--------------------------------------------
---------------------
Name : teacherBlockerTEST
---------------------

*********
* pre-req:
********* 
pdoConnect();
session_start();

if(isset($_SESSION['uid'])){
	$userid=$_SESSION['uid'];
}else{
	$userid="1";		
} 

*********
End pre-
********* 

if(checklogin()) {
	if (isSuperUser($userid)) {
		$status = "teacher" = IS TRUE; 
	} else if ($action === "challenge" || $action === "password") {
		// and fetch the password from the db
		$querystring="SELECT password FROM user WHERE uid=:userid LIMIT 1";	
		$stmt = $pdo->prepare($querystring);
		$stmt->bindParam(':userid', $userid);

		// Shall not return any new password changes, if the user is a teacher.



--------------------------------------------------
Row : 46 Check if methods work if student
--------------------------------------------------
---------------------
Name : studentAccessTEST
---------------------

*********
* pre-req:
********* 
pdoConnect();
session_start();

if(isset($_SESSION['uid'])){
	$userid=$_SESSION['uid'];
}else{
	$userid="1";		
} 

*********
End pre-
********* 



if(checklogin()) {
	if (isSuperUser($userid)) {
		$status = "teacher" = IS FALSE;
	} else if ($action === "challenge" || $action === "password") {
		// and fetch the password from the db
		$querystring="SELECT password FROM user WHERE uid=:userid LIMIT 1";	
		$stmt = $pdo->prepare($querystring);
		$stmt->bindParam(':userid', $userid);

		if(!$stmt->execute()) {
			$error = $stmt->errorInfo(); 
			$debug = "Error finding user ".$error[2];
		} else {
			$result = $stmt->fetch(PDO::FETCH_OBJ);

console.log(uid)

// Give Kong for Toddler account, as user info, if uid in console=2, its correct.



--------------------------------------------------
Row 62: Check if passwords matches
--------------------------------------------------


*********
* pre-req:
********* 
////////////////////////////////////// Has to be connected to db

pdoConnect();
session_start();

////////////////////////////////////////Needs an uid

if(isset($_SESSION['uid'])){
	$userid=$_SESSION['uid'];
}else{
	$userid="1";		
} 

////////////////////////////////////////Can't be superUser, meaning teacher.
if(checklogin()) {
	if (isSuperUser($userid)) {
		$status = "teacher";
	} else if ($action === "challenge" || $action === "password") {
		// and fetch the password from the db
		$querystring="SELECT password FROM user WHERE uid=:userid LIMIT 1";	
		$stmt = $pdo->prepare($querystring);
		$stmt->bindParam(':userid', $userid);
		
		if(!$stmt->execute()) {
			$error = $stmt->errorInfo(); 
			$debug = "Error finding user ".$error[2];
		} else {
			$result = $stmt->fetch(PDO::FETCH_OBJ);

*********
End pre-
********* 
$password = "test123";
$result = "test123"; 	// Result is the value that the user gives in the browser normally.

if(password_verify($password, $result->password)) { $password = password, verified.

// Try giving correct and incorrect values too the password and result variables.


------------------------------------------------------------------------
Row 64: Methods for changing challenge and passwords of a student user. 
------------------------------------------------------------------------

*********
* pre-req:
********* 
////////////////////////////////////// Has to be connected to db

pdoConnect();
session_start();

////////////////////////////////////////Needs an uid or userid

if(isset($_SESSION['uid'])){
	$userid=$_SESSION['uid'];
}else{
	$userid="1";		
} 

////////////////////////////////////////Can't be superUser, meaning teacher.
if(checklogin()) {
	if (isSuperUser($userid)) {
		$status = "teacher";
	} else if ($action === "challenge" || $action === "password") {
		// and fetch the password from the db
		$querystring="SELECT password FROM user WHERE uid=:userid LIMIT 1";	
		$stmt = $pdo->prepare($querystring);
		$stmt->bindParam(':userid', $userid);
		
		if(!$stmt->execute()) {
			$error = $stmt->errorInfo(); 
			$debug = "Error finding user ".$error[2];
		} else {
			$result = $stmt->fetch(PDO::FETCH_OBJ);

*********
End pre-
********* 


$accessString = "SELECT access FROM user_course WHERE uid=:userid AND access='W' LIMIT 1";
				$query = $pdo->prepare($accessString);
				$query->bindParam('userid', $userid);
				
				
				if(!$query->execute()) {
					$error = $stmt->errorInfo();
					$debug = "Error checking if user is teacher ".$error[2];
				} else {
					if($query->rowCount() > 0) {
						//If a row matches query, the user is a teacher/superuser and cannot change password/security questions
						$status = "teacher";
					} else {
						//Action determines which form is being used
						if($action == "challenge"){
								//Update challenge question
								$querystringz = "UPDATE user SET securityquestion=:SQ, securityquestionanswer=:answer WHERE uid=:userid";
								$stmt = $pdo->prepare($querystringz);
								$stmt->bindParam(':userid', $userid);
								$stmt->bindParam(':SQ', $question);
								$stmt->bindParam(':answer', $hashedAnswer);

								if(!$stmt->execute()) {
									$error=$stmt->errorInfo(); 
								} else {
									$success = true;
								}
						} else if($action == "password"){
							//Update password
							$passwordquery = "UPDATE user SET password=:PW WHERE uid=:userid";
							$stmt = $pdo->prepare($passwordquery);
							$stmt->bindParam(':userid', $userid);
							$stmt->bindParam(':PW', $hashedPassword);

							if(!$stmt->execute()) {
								$error=$stmt->errorInfo(); 
							} else {
								$success = true;
							}
						}
					}
				}
			} else {
				$status = "wrongpassword";
			}





// If superuser/teacher, (row 71)$error[2] variable should fire. If it doesn't, it's not working. 
// Test as student user, check data in database. If password and challenge changed, it's correct.