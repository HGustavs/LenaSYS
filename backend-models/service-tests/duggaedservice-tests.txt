
duggaedservice.php

---------------------------------------------------------------------------------------------------------------------
Create an assignment (line 57):
---------------------------------------------------------------------------------------------------------------------
*********
* pre-req:
********* 

{ (checklogin = true) && 
(hasAccess($userid, $cid, 'w') || isSuperUser($userid) || hasAccess($userid, $cid, 'st')) = true }

*checking current number of quizzes, and save qid. 	
SQL-query: SELECT count(id) FROM quiz;   // counts the number of quizzes, save it to a variable 

*******
* send parameters inputs to duggaedservice.php 
******
send
{
    $opt = "SAVDUGGA"
    $qid = null or $qid = “UNK”
    $cid = 1000
    $userid = // this is automatically added from session 
    $courserver = 10000

} 

*****
* Get newly creaded Assignment ID, repet the SQL-query
*****
SQL-query: SELECT MAX(id) FROM quiz;     // this value will identify the last assignment that was created (it has the highest ID number)
SQL-query: SELECT count(id) FROM quiz;   // save answare to a variable 

*****
* compare results
*****

count + 1 = passed
no change = failed  

*****
* remove inserted row from DB, using qid 
*****

SQL-query: DELETE FROM quiz WHERE id = qid; // qid here is the value previously saved. 



-------------------------------------------------------------------------------------------------------------------------
Update an Assignment (line 68):
-------------------------------------------------------------------------------------------------------------------------
*****
* pre-req:
*****

{ (checklogin = true) && 
(hasAccess($userid, $cid, 'w') || isSuperUser($userid) || hasAccess($userid, $cid, 'st')) = true }

(is_null($qid)||strcmp($qid,"UNK")===0) = false 

Create an assignment, and save information on all attribute in an array  

///////
/ pre-req variables
//////

$pre-Values = { 1885, 
                0,
                1,
                "AutomaticTest",
                "Quiz",
                "2023-04-27 00:00:00",
                "2023-04-28 00:00:00",
                2,
                "1337",
                "2023-04-17",
                "{&quot;deadline1&quot;:&quot;2023-04-18 0:0&quot;,&quot;comment1&quot;:&quot;&quot;,&quot;deadline2&quot;:&quot;&quot;,&quot;comment2&quot;:&quot;&quot;,&quot;deadline3&quot;:&quot;&quot;,&quot;comment3&quot;:&quot;&quot;}", 
                0 }; 


SQL-query: INSERT INTO quiz(cid,autograde,gradesystem,qname,quizFile,qrelease,deadline,creator,vers,qstart,jsondeadline,`group`) 
VALUES ($pre-Values[0], $pre-Values[1], $pre-Values[2], $pre-Values[3], $pre-Values[4], $pre-Values[5], $pre-Values[6], $pre-Values[7], $pre-Values[8], $pre-Values[9], $pre-Values[10] );


*****
* This will get the information that you need.
*****

// these two querys are te be used in tandum, it retrives a singel rows compleat information of the last added assignment 
SQL-query: SELECT @cid:= MAX(id) FROM quiz;
SQL-query: SELECT * FROM quiz WHERE id = @cid; 

*****
* Update information on an assignment
* send parameters inputs to duggaedservice.php 
*****

send
{
    $opt = "SAVDUGGA";
    $qid = // the value “id” that was saved;  
}

*****
* compare results
*****

Are the values unchanged?
yes = fail
no = pass
might be a good idea to check all values individually! 

*****
* remove inserted row from DB, using qid 
*****

SQL-query: DELETE FROM quiz WHERE id = id; // id is one of the value previously saved. 

-------------------------------------------------------------------------------------------------------------------------------------------------
Delete an Assignment (line 95):
-------------------------------------------------------------------------------------------------------------------------------------------------
*****
* pre-req:
****

{ (checklogin = true) && 
(hasAccess($userid, $cid, 'w') || isSuperUser($userid) || hasAccess($userid, $cid, 'st')) = true }’

Create an assignment

///////
/ pre-req variables
//////

$pre-Values = { 1885, 
                0,
                1,
                "AutomaticTest",
                "Quiz",
                "2023-04-27 00:00:00",
                "2023-04-28 00:00:00",
                2,
                "1337",
                "2023-04-17",
                "{&quot;deadline1&quot;:&quot;2023-04-18 0:0&quot;,&quot;comment1&quot;:&quot;&quot;,&quot;deadline2&quot;:&quot;&quot;,&quot;comment2&quot;:&quot;&quot;,&quot;deadline3&quot;:&quot;&quot;,&quot;comment3&quot;:&quot;&quot;}", 
                0 }; 


SQL-query: INSERT INTO quiz(cid,autograde,gradesystem,qname,quizFile,qrelease,deadline,creator,vers,qstart,jsondeadline,`group`) 
VALUES ($pre-Values[0], $pre-Values[1], $pre-Values[2], $pre-Values[3], $pre-Values[4], $pre-Values[5], $pre-Values[6], $pre-Values[7], $pre-Values[8], $pre-Values[9], $pre-Values[10] );

*****
* checking current number of quizzes, and save qid. 	
*****

SQL-query: SELECT count(id) FROM quiz;   // counts the number of quizzes save this value
SQL-query: SELECT MAX(id) FROM quiz;     // this value is to be saved, it will be used as ID when we identify and delete the data from the database.

*****
* Update information on an assignment
* send parameters inputs to duggaedservice.php 
*****

send
{
    $opt = "DELDU";
    $qid = // the saved ID value;
}

*****
* repet the SQL-query
*****

SQL-query: SELECT count(id) FROM quiz; 	// save the value in a different variable 

*****
* compare results
*****

count - 1 = passed
no change = failed  

-----------------------------------------------------------------------------------------------------------------------------------------
Add Variant (contents of quiz) (line 110):
-----------------------------------------------------------------------------------------------------------------------------------------
*****
* pre-req:
*****

{ (checklogin = true) && 
(hasAccess($userid, $cid, 'w') || isSuperUser($userid) || hasAccess($userid, $cid, 'st')) = true }’

*****
* checking current number of quizzes, and save vid. 	
*****

SQL-query: SELECT count(vid) FROM variant;  // counts the number of variants save this value
SQL-query: SELECT MAX(quizID) FROM variant;    // the newest addition to the table will have the highest value. save $quizID=value+1 to variable  

*****
* Add a new variant
* send parameters inputs to duggaedservice.php 
*****

send
{
    $opt = "ADDVARI";
    $qid = $quizID;
    $userid = 2;
    $disable = 1;
    $param = "{"type":"md","filelink":"md","gType":"","diagram_File":"Empty canvas","diagram_type":{"ER":true,"UML":false,"IE":false},"extraparam":"","notes":"","submissions":[{"type":"pdf","fieldname":"","instruction":""}],"errorActive":false}";
    $answare = "Bara Text";
}
  

*****
* repet the SQL-query
*****

SQL-query: SELECT count(vid) FROM variant;  // counts the number of variants save this value

*****
* compare results
*****

count + 1 = passed
no change = failed

*****
* remove inserted row from DB, using qid 
*****

SQL-query: DELETE FROM variant WHERE quizID = $quizID; // quizID is the same as the INSERT. 


-------------------------------------------------------------------------------------------------------------------------
Update a variant (line 123):
-------------------------------------------------------------------------------------------------------------------------
*****
* pre-req:
*****

{ (checklogin = true) && 
(hasAccess($userid, $cid, 'w') || isSuperUser($userid) || hasAccess($userid, $cid, 'st')) = true }

Create a quiz then Create a variant with the same ID, all attribute are to be saved in an array, they will  be compared after an update   

///////
/ pre-req variables & table entries
//////

$preValuesQuiz = {  1885, 
                    0,
                    1,
                    "AutomaticTest",
                    "Quiz",
                    "2023-04-27 00:00:00",
                    "2023-04-28 00:00:00",
                    2,
                    "1337",
                    "2023-04-17",
                    "{&quot;deadline1&quot;:&quot;2023-04-18 0:0&quot;,&quot;comment1&quot;:&quot;&quot;,&quot;deadline2&quot;:&quot;&quot;,&quot;comment2&quot;:&quot;&quot;,&quot;deadline3&quot;:&quot;&quot;,&quot;comment3&quot;:&quot;&quot;}", 
                    0 }; 

SQL-query: INSERT INTO quiz(cid,autograde,gradesystem,qname,quizFile,qrelease,deadline,creator,vers,qstart,jsondeadline,`group`) 
VALUES ($preValuesQuiz[0], $preValuesQuiz[1], $preValuesQuiz[2], $preValuesQuiz[3], $preValuesQuiz[4], $preValuesQuiz[5], $preValuesQuiz[6], $preValuesQuiz[7], $preValuesQuiz[8], $preValuesQuiz[9], $preValuesQuiz[10] );

check the highest quiz ID
SQL-query: SELECT MAX(id) FROM quiz;     // Gets the newest addition to the table quiz, will be the $quizID for the the tables variant(highest id = last added), 
                                            it will be used as ID when we identify and delete the data from the database.


$preValuesVariant = {   $quizID,
                        2,
                        0,
                        '{&quot;type&quot;:&quot;md&quot;,&quot;filelink&quot;:&quot;md&quot;,&quot;gType&quot;:&quot;&quot;,&quot;diagram_File&quot;:&quot;Empty canvas&quot;,&quot;diagram_type&quot;:{&quot;ER&quot;:true,&quot;UML&quot;:false,&quot;IE&quot;:false},&quot;extraparam&quot;:&quot;&quot;,&quot;notes&quot;:&quot;&quot;,&quot;submissions&quot;:[{&quot;type&quot;:&quot;pdf&quot;,&quot;fieldname&quot;:&quot;&quot;,&quot;instruction&quot;:&quot;&quot;}],&quot;errorActive&quot;:false}',
                        "some text" };

SQL-Query: INSERT INTO variant(quizID,creator,disabled,param,variantanswer) VALUES (preValuesVariant[0], preValuesVariant[1], preValuesVariant[2], preValuesVariant[3], preValuesVariant[4]);

Get the ID of the newly added variant, and save it in $variantID

SQL-Query: SELECT MAX(quizID) FROM variant;

*****
* Update information on an assignment
* send parameters inputs to duggaedservice.php 
*****

send
{
    $opt = "SAVVARI";
    $vid = $variantID;
    $disabled = 1;
    $param = '{"type":"md","filelink":"","gType":"md","gFilelink":"","diagram_File":"","diagram_type":{"ER":true,"UML":false,"IE":false},"extraparam":"","notes":"","submissions":[{"type":"pdf","fieldname":"","instruction":""},{"type":"pdf","fieldname":"","instruction":""}],"errorActive":false}';
    $answer = "new text";  
}

*****
* compare results
*****

if $preValuesVariant[2] = $preValuesQuiz[2]: failed
if $preValuesVariant[3] = $preValuesQuiz[3]: failed
if $preValuesVariant[4] = $preValuesQuiz[4]: failed
else : passed 

 

*****
* remove inserted row from table quiz DB, using quizID. This will delete both table entries (variant and quiz)
*****

SQL-query: DELETE FROM quiz WHERE id = $quizID;  




-----------------------------------------------------------------------------------------------------------------------------------------
Delete variant and useranswer? (line 134)
-----------------------------------------------------------------------------------------------------------------------------------------
*****
* pre-req:
*****

{ (checklogin = true) && 
(hasAccess($userid, $cid, 'w') || isSuperUser($userid) || hasAccess($userid, $cid, 'st')) = true }’

*****
* checking current number of quizzes, and save vid. 	
*****

SQL-query: SELECT count(variant) FROM userAnswer; // counts the number of userAnswer save this value for later
SQL-query: SELECT count(vid) FROM variant; // counts the number of variants save this value for later

*****
* Delete old variant and userAnswer
* send parameters inputs to duggaedservice.php 
*****

send 
{
    $opt = "DELVARI"; 
    $vid = the value 
}

*****
* repeat the SQL-query
*****

SQL-query: SELECT count(variant) FROM userAnswer; // save the value in a different variable 
SQL-query: SELECT count(vid) FROM quiz; 	// save the value in a different variable 

*****
* compare results
*****

count - 1 = passed // for both selected counts, needs to be checked for both tables. 
no change = failed  
